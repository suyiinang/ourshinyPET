knitr::opts_chunk$set(echo = FALSE)
packages <- c("tidyverse","sf","tmap","crosstalk","leaflet","RColorBrewer","ggplot2","rgdal", "rgeos", "raster", "maptools","tmaptools","shiny","tidytext","wordcloud","wordcloud2","tm","ggthemes","igraph","ggmap","DT","reshape2","ggraph","topicmodels","tidytext","topicmodels","quanteda","tm","RColorBrewer","knitr","kableExtra")
for (p in packages){
if (!require(p,character.only=T)){
install.packages(p)
}
library(p, character.only=T)
}
reviews <- read_csv("reviews/reviews.csv")%>%
dplyr::select(listing_id,comments)
listings <- read_csv("listings/listings.csv")  %>%
rename(listing_id=id) %>%
dplyr::select(-c(listing_url, scrape_id, last_scraped, name, picture_url,host_url, host_about,host_thumbnail_url, host_picture_url, host_listings_count, host_verifications,calendar_updated,first_review,last_review,license,neighborhood_overview,description,host_total_listings_count,host_has_profile_pic,availability_30,availability_60,availability_90,availability_365,calculated_host_listings_count,calculated_host_listings_count_entire_homes,calculated_host_listings_count_private_rooms,calculated_host_listings_count_shared_rooms,reviews_per_month,minimum_nights,maximum_nights,minimum_minimum_nights,maximum_minimum_nights,minimum_maximum_nights,maximum_maximum_nights,number_of_reviews_ltm,number_of_reviews_l30d,minimum_nights_avg_ntm,maximum_nights_avg_ntm,calendar_last_scraped,has_availability,instant_bookable))
data <- right_join(reviews,listings,by="listing_id")
data$host_since <- as.Date(data$host_since, format = '%d/%m/%Y')
data$listing_id <- as.character(data$listing_id)
data$comments <- gsub("[^A-Za-z]", " ",data$comments) %>%
tolower()
data$comments <- gsub("[^A-Za-z]", " ",data$comments) %>%
tolower()
data$price <- str_remove(string=data$price,pattern='\\$') %>%
as.numeric()
data$host_response_rate <- gsub("%","",data$host_response_rate)
data$amenities <- gsub('\"', "", data$amenities, fixed = TRUE)
data <- subset(data,host_location=="Singapore" | host_location=="Singapore, Singapore" | host_location=="SG")
data <- na.omit(data$comments)
data_comments <- data %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
ungroup() %>%
anti_join(stop_words)
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
ungroup() %>%
anti_join(stop_words)
data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
ungroup() %>%
anti_join(stop_words)
data_comments <- data %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
ungroup() %>%
anti_join(stop_words)
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
ungroup() %>%
anti_join(stop_words)
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
tibble() %>%
#group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
#group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
packages <- c("tidyverse","sf","tmap","crosstalk","leaflet","RColorBrewer","ggplot2","rgdal", "rgeos", "raster", "maptools","tmaptools","shiny","tidytext","wordcloud","wordcloud2","tm","ggthemes","igraph","ggmap","DT","reshape2","ggraph","topicmodels","tidytext","topicmodels","quanteda","tm","RColorBrewer")
for (p in packages){
if (!require(p,character.only=T)){
install.packages(p)
}
library(p, character.only=T)
}
reviews <- read_csv("reviews/reviews.csv")%>%
dplyr::select(listing_id,comments)
listings <- read_csv("listings/listings.csv")  %>%
rename(listing_id=id) %>%
dplyr::select(-c(listing_url, scrape_id, last_scraped, name, picture_url,host_url, host_about,host_thumbnail_url, host_picture_url, host_listings_count, host_verifications,calendar_updated,first_review,last_review,license,neighborhood_overview,description,host_total_listings_count,host_has_profile_pic,availability_30,availability_60,availability_90,availability_365,calculated_host_listings_count,calculated_host_listings_count_entire_homes,calculated_host_listings_count_private_rooms,calculated_host_listings_count_shared_rooms,reviews_per_month,minimum_nights,maximum_nights,minimum_minimum_nights,maximum_minimum_nights,minimum_maximum_nights,maximum_maximum_nights,number_of_reviews_ltm,number_of_reviews_l30d,minimum_nights_avg_ntm,maximum_nights_avg_ntm,calendar_last_scraped,has_availability,instant_bookable))
data <- right_join(reviews,listings,by="listing_id")
data$host_since <- as.Date(data$host_since, format = '%d/%m/%Y')
data$listing_id <- as.character(data$listing_id)
data$comments <- gsub("[^A-Za-z]", " ",data$comments) %>%
tolower()
data$comments <- gsub("[^A-Za-z]", " ",data$comments) %>%
tolower()
data$price <- str_remove(string=data$price,pattern='\\$') %>%
as.numeric()
data$host_response_rate <- gsub("%","",data$host_response_rate)
data$amenities <- gsub('\"', "", data$amenities, fixed = TRUE)
data <- subset(data,host_location=="Singapore" | host_location=="Singapore, Singapore" | host_location=="SG")
data <- na.omit(data$comments)
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
#group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
knitr::opts_chunk$set(echo = FALSE)
packages <- c("tidyverse","sf","tmap","crosstalk","leaflet","RColorBrewer","ggplot2","rgdal", "rgeos", "raster", "maptools","tmaptools","shiny","tidytext","wordcloud","wordcloud2","tm","ggthemes","igraph","ggmap","DT","reshape2","ggraph","topicmodels","tidytext","topicmodels","quanteda","tm","RColorBrewer")
for (p in packages){
if (!require(p,character.only=T)){
install.packages(p)
}
library(p, character.only=T)
}
### Data Importing
Merge the listing and review files
Cleaning
- In comments, Remove anything but alphabets; Change all alphabets to lowercase
- In price, remove dollar sign
- host_response_rate should be numerical
- remove  \ in amenities
- remove locations not in singapore
- drop rows with missing comments
Write to CSV for future usage
View the data
Read file and retain only necessary columns
- review file contains 52367 observations with 6 variables;only 2 columns (listing_id and comments) are retained.
- listings file contains 4255 observations with 74 variables; 33 columns are retained.
Data Types
- If  host_since is already in date format, not need to change. Else use the following.
- listing_id should be categorical
glimpse(data)
As glimpse(reviews) does not provide a very nice way of presenting it, took into account using datable table and kable.
However, datatable does not work well with the extensions of FixedColumns, FixedHeader and Scoller. These extensions does not work well in Shiny too. However, the code is efficient and sufficient thus will be used compared to kable.
### Tokenisation, Stop Word Removal, Stemming/Lemmatisation
There are two methods to this.
![](comparepackage.png)
####tidytext
First method is using tidytext:
```{r}
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
#group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
data_comments <- data %>%
#dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
data %>%
#dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments)
data_comments <- data %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
data_comments <- data %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
detach("package:utils", unload = TRUE)
detach("package:stats", unload = TRUE)
detach("package:methods", unload = TRUE)
detach("package:graphics", unload = TRUE)
detach("package:grDevices", unload = TRUE)
detach("package:datasets", unload = TRUE)
detach("package:base", unload = TRUE)
library(utils, lib.loc = "C:/Windows/R-4.0.4/library")
library(stats, lib.loc = "C:/Windows/R-4.0.4/library")
library(rlang, lib.loc = "C:/Windows/R-4.0.4/library")
library(methods, lib.loc = "C:/Windows/R-4.0.4/library")
library(graphics, lib.loc = "C:/Windows/R-4.0.4/library")
library(grDevices, lib.loc = "C:/Windows/R-4.0.4/library")
library(base, lib.loc = "C:/Windows/R-4.0.4/library")
knitr::opts_chunk$set(echo = FALSE)
packages <- c("tidyverse","sf","tmap","crosstalk","leaflet","RColorBrewer","ggplot2","rgdal", "rgeos", "raster", "maptools","tmaptools","shiny","tidytext","wordcloud","wordcloud2","tm","ggthemes","igraph","ggmap","DT","reshape2","ggraph","topicmodels","tidytext","topicmodels","quanteda","tm","RColorBrewer")
for (p in packages){
if (!require(p,character.only=T)){
install.packages(p)
}
library(p, character.only=T)
}
reviews <- read_csv("reviews/reviews.csv")%>%
dplyr::select(listing_id,comments)
listings <- read_csv("listings/listings.csv")  %>%
rename(listing_id=id) %>%
dplyr::select(-c(listing_url, scrape_id, last_scraped, name, picture_url,host_url, host_about,host_thumbnail_url, host_picture_url, host_listings_count, host_verifications,calendar_updated,first_review,last_review,license,neighborhood_overview,description,host_total_listings_count,host_has_profile_pic,availability_30,availability_60,availability_90,availability_365,calculated_host_listings_count,calculated_host_listings_count_entire_homes,calculated_host_listings_count_private_rooms,calculated_host_listings_count_shared_rooms,reviews_per_month,minimum_nights,maximum_nights,minimum_minimum_nights,maximum_minimum_nights,minimum_maximum_nights,maximum_maximum_nights,number_of_reviews_ltm,number_of_reviews_l30d,minimum_nights_avg_ntm,maximum_nights_avg_ntm,calendar_last_scraped,has_availability,instant_bookable))
data <- right_join(reviews,listings,by="listing_id")
data$host_since <- as.Date(data$host_since, format = '%d/%m/%Y')
data$comments <- gsub("[^A-Za-z]", " ",data$comments) %>%
tolower()
data$comments <- gsub("[^A-Za-z]", " ",data$comments) %>%
tolower()
data$price <- str_remove(string=data$price,pattern='\\$') %>%
as.numeric()
data$host_response_rate <- gsub("%","",data$host_response_rate)
data$amenities <- gsub('\"', "", data$amenities, fixed = TRUE)
data <- subset(data,host_location=="Singapore" | host_location=="Singapore, Singapore" | host_location=="SG")
data <- na.omit(data$comments)
glimpse(data)
data <- right_join(reviews,listings,by="listing_id")
data$host_since <- as.Date(data$host_since, format = '%d/%m/%Y')
data$listing_id <- as.character(data$listing_id)
data$comments <- gsub("[^A-Za-z]", " ",data$comments) %>%
tolower()
data$comments <- gsub("[^A-Za-z]", " ",data$comments) %>%
tolower()
data$price <- str_remove(string=data$price,pattern='\\$') %>%
as.numeric()
data$host_response_rate <- gsub("%","",data$host_response_rate)
data$amenities <- gsub('\"', "", data$amenities, fixed = TRUE)
data <- subset(data,host_location=="Singapore" | host_location=="Singapore, Singapore" | host_location=="SG")
glimpse(data)
data_comments <- data %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
data_comments <- data %>%
filter(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
data_comments <- data %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
library(rlang, lib.loc = "C:/Windows/R-4.0.4/library")
data_comments <- data %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
?tbl_df
data_comments <- data %>%
tibble() %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
data_comments <- data %>%
tbl_df() %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
glimpse(data)
type(data)
View(data)
View(data)
detach("package:dplyr", unload = TRUE)
library(dplyr)
data_comments <- data %>%
select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
#tibble() %>%
group_by(listing_id) %>%
#filter(n()>5) %>%
ungroup() %>%
#remove stop
anti_join(stop_words,by=c("word" = "word"))
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
group_by(listing_id) %>%
ungroup() %>%
anti_join(stop_words,by=c("word" = "word"))
View(data)
data$comments
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
group_by(listing_id) %>%
ungroup() %>%
anti_join(stop_words)
install.packages("DataExplorer")
library(DataExplorer)
create_report(data)
data <- right_join(reviews,listings,by="listing_id")
data$comments <- gsub("[^[^A-Za-z][:space:]']", " ",data$comments) %>%
tolower()
head(data$comments)
data <- right_join(reviews,listings,by="listing_id")
data$comments <- gsub("[[^A-Za-z][:punct:]]", " ",data$comments) %>%
tolower()
head(data$comments)
data <- right_join(reviews,listings,by="listing_id")
head(data$comments)
data$comments <- gsub("[^A-Za-z]", "",data$comments) %>%
tolower()
head(data$comments)
data <- right_join(reviews,listings,by="listing_id")
data$comments <- gsub("^[alpha:][:space:]'\"]", " ",data$comments) %>%
tolower()
head(data$comments)
stopwords()
corpus_review=tm_map(corpus_review,stemDocument)
corpus_review <- Corpus(VectorSource(data$comments))
corpus_review <- tm_map(corpus_review,tolower)
corpus_review=tm_map(corpus_review, removeWords,c("also","is","in","to","with"))
corpus_review=tm_map(corpus_review,stemDocument)
corpus_review <- Corpus(VectorSource(data$comments))
data_comments
corpus_review <- Corpus(VectorSource(data$comments))
corpus_review <- tm_map(corpus_review,tolower)
corpus_review=tm_map(corpus_review, removePunctuation)
corpus_review=tm_map(corpus_review, removeWords, stopwords("english"))
corpus_review=tm_map(corpus_review,stemDocument)
corpus_review[[11]][1]
knitr::opts_chunk$set(echo = FALSE)
setwd("C:/Users/joeyc/blog/_posts/2021-03-29-assignment")
```{r}
setwd("C:/Users/joeyc/blog/_posts/2021-03-29-assignment")
knitr::opts_chunk$set(echo = FALSE)
data_count <- data_comments %>%
group_by(word) %>%
summarise(frequency=n())
tidy_wordcloud <- data_count %>%
wordcloud2()
# Convert TDM to matrix
review_m <- as.matrix(corpus_review)
knitr::opts_chunk$set(echo = FALSE)
packages <- c("tidyverse","sf","tmap","crosstalk","leaflet","RColorBrewer","ggplot2","rgdal", "rgeos", "raster", "maptools","tmaptools","shiny","tidytext","wordcloud","wordcloud2","tm","ggthemes","igraph","ggmap","DT","reshape2","ggraph","topicmodels","tidytext","topicmodels","quanteda","tm","RColorBrewer","DataExplorer")
for (p in packages){
if (!require(p,character.only=T)){
install.packages(p)
}
library(p, character.only=T)
}
reviews <- read_csv("reviews/reviews.csv")%>%
dplyr::select(listing_id,comments)
listings <- read_csv("listings/listings.csv")  %>%
rename(listing_id=id) %>%
dplyr::select(-c(listing_url, scrape_id, last_scraped, name, picture_url,host_url, host_about,host_thumbnail_url, host_picture_url, host_listings_count, host_verifications,calendar_updated,first_review,last_review,license,neighborhood_overview,description,host_total_listings_count,host_has_profile_pic,availability_30,availability_60,availability_90,availability_365,calculated_host_listings_count,calculated_host_listings_count_entire_homes,calculated_host_listings_count_private_rooms,calculated_host_listings_count_shared_rooms,reviews_per_month,minimum_nights,maximum_nights,minimum_minimum_nights,maximum_minimum_nights,minimum_maximum_nights,maximum_maximum_nights,number_of_reviews_ltm,number_of_reviews_l30d,minimum_nights_avg_ntm,maximum_nights_avg_ntm,calendar_last_scraped,has_availability,instant_bookable))
data <- right_join(reviews,listings,by="listing_id")
write.csv(data,"data.csv")
glimpse(data)
#create_report(data)
data$host_since <- as.Date(data$host_since, format = '%d/%m/%Y')
data$listing_id <- as.character(data$listing_id)
data$comments <- gsub("^[alpha:][:space:]'\"]", " ",data$comments) %>%
tolower()
data$price <- str_remove(string=data$price,pattern='\\$') %>%
as.numeric()
data$host_response_rate <- gsub("%","",data$host_response_rate)
data$amenities <- gsub('\"', "", data$amenities, fixed = TRUE)
data <- subset(data,host_location=="Singapore" | host_location=="Singapore, Singapore" | host_location=="SG")
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
group_by(listing_id) %>%
ungroup() %>%
anti_join(stop_words)
data_count <- data_comments %>%
group_by(word) %>%
summarise(frequency=n())
tidy_wordcloud <- data_count %>%
wordcloud2()
corpus_review <- Corpus(VectorSource(data$comments))
corpus_review <- tm_map(corpus_review,tolower)
corpus_review=tm_map(corpus_review, removePunctuation)
corpus_review=tm_map(corpus_review, removeWords, stopwords("english"))
corpus_review=tm_map(corpus_review, removeWords,c("also","is","in","to","with"))
corpus_review=tm_map(corpus_review,stemDocument)
corpus_review[[10]][1]
# Convert TDM to matrix
review_m <- as.matrix(corpus_review)
# Convert TDM to matrix
review <- as.matrix(corpus_review)
# Sum rows and frequency data frame
review_term_freq <- rowSums(review_m)
review_tdm <- TermDocumentMatrix(corpus_review)
# Convert TDM to matrix
review <- as.matrix(review_tdm)
# Sum rows and frequency data frame
review_term_freq <- rowSums(review)
# Convert TDM to matrix
review <- as.matrix(review_tdm)
review_tdm <- TermDocumentMatrix(corpus_review)
review_tdm <- TermDocumentMatrix(corpus_review)
# Convert TDM to matrix
review <- as.matrix(review_tdm)
memory.limit()
memory.limit(size=1800)
# Convert TDM to matrix
review <- as.data.frame(colSums(as.matrix(review_tdm)))
data_count <- data_comments %>%
group_by(word) %>%
summarise(frequency=n())
tidy_wordcloud <- data_count %>%
wordcloud2()
