runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::deployApp('./apps')
library(rsconnect)
rsconnect::deployApp('./apps')
shiny::runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
library(rsconnect)
rsconnect::deployApp('./apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
Rvar_list(var_list)
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
shiny::runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
rlang::last_error()
runApp('apps')
setwd("C:/kgalbindo/ourshinyPET/apps")
runApp()
rlang::last_error()
runApp()
?select
runApp()
?var_remove
?all_of
runApp()
shiny::runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
setwd("C:/kgalbindo/ourshinyPET/apps")
runApp()
runApp()
runApp()
shiny::runApp('apps')
runApp('apps')
runApp('apps')
iny)
library(shinydashboard)
library(shinyWidgets)
library(tidyverse)
library(ggstatsplot)
library(plotly)
library(readr)
library(leaflet)
library(haven)
library(funModeling)
library(crosstalk)
library(data.table)
library(ggplot2)
library(tidytext)
library(ggfittext)
library(tidymodels)
library(ggcorrplot)
library(vip)
library(Boruta)
library(reshape2)
library(shinycssloaders)
library(ranger)
#########
print("hello")
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
final_listings <- read_csv("./data/listing_processed.csv") %>%
select(-all_of(var_remove)) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(across(where(is.logical), as.factor)) %>%
mutate(price_per_pax = price/accommodates) %>%
drop_na(host_is_superhost)
setwd("C:/kgalbindo/ourshinyPET/apps")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('apps')
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
shiny::runApp('apps')
install.packages('textdata')
runApp('apps')
install.packages('crop')
remotes::install_github('yihui/tinytex')
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::tlmgr_install("pdfcrop")
tools::find_gs_cmd()
Sys.setenv(R_GSCMD="C:/gs9.54.0/bin/gswin64.exe")
tools::find_gs_cmd()
shiny::runApp('deliverables/apps')
runApp('deliverables/apps')
runApp('apps')
runApp('apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('apps')
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(tidyverse)
library(plotly)
library(readr)
library(leaflet)
library(haven)
library(funModeling)
library(crosstalk)
library(data.table)
library(ggplot2)
library(ggfittext)
library(tidymodels)
library(glmnet)
library(ranger)
#library(xgboost)
library(rpart)
library(visNetwork)
library(sparkline)
library(ggcorrplot)
library(vip)
library(Boruta)
library(reshape2)
library(shinycssloaders)
library(shinyalert)
library(ranger)
library(skimr)
library(shinythemes)
library(rgdal)
library(sf)
library(tmap)
library(wordcloud2)
library(NLP)
library(tm)
library(stringr)
library(SnowballC)
library(RColorBrewer)
library(topicmodels)
library(tidytext)
library(slam)
library(tidyr)
library(igraph)
library(ggraph)
library(highcharter)
library(wordcloud)
library(widyr)
library(LDAvis)
library(text2vec)
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
final_listings <- read_csv("data/listing_processed.csv") %>%
select(-all_of(var_remove)) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(across(where(is.logical), as.factor)) %>%
mutate(price_per_pax = price/accommodates) %>%
drop_na(host_is_superhost)
cat_var <-final_listings %>% select(where(is.factor))
num_var <- final_listings %>% select(where(is.numeric))
facet_var <- final_listings %>% select(host_response_time, host_is_superhost, host_identity_verified, neighbourhood_group_cleansed,
room_type,instant_bookable,bathroom_type)
themes <- list('Gray' = theme_gray(),
'Black & white' = theme_bw(),
'Linedraw' = theme_linedraw(),
'Light' = theme_light(),
'Dark' = theme_dark(),
'Minimal' = theme_minimal(),
'Classic' = theme_classic(),
'Void' = theme_void(),
'Test' = theme_test())
data <- read_csv("data/data.csv")
new_stopwords <- c("NA","michelle's","elizabeth","yuan","felix","anita","susan","eddie","eddie's","edwin","belinda","besan","nargis","antonio","sharm","tim","kathleen","stteven","jerome","freddy","eunice","eunice's","vivian","jerome's","mi's","freddy's","joey","tay","michelle","noor","anthony","tay's","carrie","jauhara","susan","karen","jenny","lena","leonard","kingsley","freda","jialin","matthew","fran","na","joey","swimminuteg","dick","cock","bitch","fran")
all_stopwords <- c(new_stopwords,stop_words)
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_cleansed,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
group_by(listing_id) %>%
ungroup() %>%
anti_join(all_stopwords,copy=TRUE) %>%
filter(!word %in% all_stopwords)
data_count <- data_comments %>%
group_by(word) %>%
summarise(frequency=n()) %>%
arrange(desc(frequency))
bigram_data_count <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_cleansed,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments,token="ngrams",n=2) %>%
separate(word,c("word1","word2"),sep=" ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
#ungroup() %>%
count(word,sort=TRUE) %>%
dplyr::slice(-c(1))
afinn <- get_sentiments("afinn")
bing <- get_sentiments("bing")
nrc <- get_sentiments("nrc")
region_data <-data_comments %>%
group_by(neighbourhood_group_cleansed) %>%
inner_join(afinn) %>%
count(word,value) %>%
mutate(score=value*n) %>%
group_by(neighbourhood_group_cleansed) %>%
summarise(mean_score=mean(score))
subzone <- readOGR(dsn = "data/spatial", layer="MP14_SUBZONE_WEB_PL")
airbnb <- select(final_listings, host_is_superhost, review_scores_rating,
neighbourhood_cleansed, room_type, price_per_pax, latitude, longitude)
airbnb <- subset(airbnb, !is.na(host_is_superhost))
airbnb_sf <- st_as_sf(airbnb, coords = c("longitude", "latitude"), crs = 4326)
mpsz2 <- st_read(dsn = 'data/spatial',
layer = 'MP14_SUBZONE_WEB_PL',
quiet = TRUE) %>%
group_by(PLN_AREA_N) %>%
summarise(geometry = sf::st_union(geometry))
listing_summary <- final_listings %>%
group_by(neighbourhood_cleansed) %>%
summarise(avg_price_pp = round(mean(price_per_pax),0),
min_price_pp = round(min(price_per_pax),0),
max_price_pp = round(max(price_per_pax),0)) %>%
mutate_at(.vars = vars(neighbourhood_cleansed), .funs= funs(toupper))
subregion_data <-data_comments %>%
group_by(neighbourhood_cleansed) %>%
inner_join(afinn) %>%
count(word,value) %>%
mutate(score=value*n) %>%
group_by(neighbourhood_cleansed) %>%
summarise(avg_sentiment_score=round(mean(score),0)) %>%
mutate_at(.vars = vars(neighbourhood_cleansed), .funs= funs(toupper))
listing_summary <- right_join(subregion_data,listing_summary, c("neighbourhood_cleansed" = "neighbourhood_cleansed" ))
airbnb_map <- right_join(mpsz2,listing_summary, c("PLN_AREA_N" = 'neighbourhood_cleansed'))
leaflet(airbnb_sf) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addCircleMarkers(
data = airbnb[airbnb$host_is_superhost == 'TRUE',],
lng = ~longitude,
lat = ~latitude,
color = '#FF5A5F',
radius = 2,
stroke = FALSE,
fillOpacity = 0.75,
group = 'Superhost'
) %>%
addCircleMarkers(
data = airbnb[airbnb$host_is_superhost == 'FALSE',],
lng = ~longitude,
lat = ~latitude,
color = '#00A699',
radius = 2,
stroke = FALSE,
fillOpacity = 0.5,
group = 'Regular_host'
) %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
overlayGroups = c('Superhost','Regular_host'),
options = layersControlOptions(collapsed = FALSE))
leaflet(airbnb_sf) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addCircleMarkers(
data = airbnb[airbnb$room_type == 'Entire home/apt',],
lng = ~longitude,
lat = ~latitude,
color = '#FF5A5F',
radius = 2,
stroke = FALSE,
fillOpacity = 0.75,
group = 'Entire home'
) %>%
addCircleMarkers(
data = airbnb[airbnb$room_type == 'Hotel room',],
lng = ~longitude,
lat = ~latitude,
color = '#00A699',
radius = 2,
stroke = FALSE,
fillOpacity = 0.75,
group = 'Hotel room'
) %>%
addCircleMarkers(
data = airbnb[airbnb$room_type == 'Private room',],
lng = ~longitude,
lat = ~latitude,
color = '#3182bd',
radius = 2,
stroke = FALSE,
fillOpacity = 0.75,
group = 'Private room'
) %>%
addCircleMarkers(
data = airbnb[airbnb$room_type == 'Shared room',],
lng = ~longitude,
lat = ~latitude,
color = '#756bb1',
radius = 2,
stroke = FALSE,
fillOpacity = 0.75,
group = 'Shared room'
) %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
overlayGroups = c('Entire home','Hotel room', 'Private room','Shared room'),
options = layersControlOptions(collapsed = FALSE))
runApp('apps')
leaflet(airbnb_sf) %>%
avg_price <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_price_pp',
n = 6,
style = 'quantile',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
avg_price <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_price_pp',
n = 6,
style = 'quantile',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
cho_map <- tmap_leaflet(avg_price) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
sent_map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
sent_cho_map <- tmap_leaflet(sent_map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
avg_price
cho_map
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp()
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('E:/suyiinang/apps')
runApp('apps')
shiny::runApp('deliverables/apps')
runApp('deliverables/apps')
runApp('deliverables/apps')
runApp('deliverables/apps')
runApp('deliverables/apps')
shiny::runApp('deliverables/apps')
install.packages('shinyserver')
