shiny::runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp()
runApp('apps')
runApp('apps')
runApp()
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
paste("price", "~ .")
traceback()
runApp('apps')
traceback()
as.formula(paste("price", "~.")
)
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
paste(var_list, collapse= "+")
final_listings <- read_csv("./data/listing_processed.csv") %>%
select(-all_of(var_remove))
setwd("C:/kgalbindo/ourshinyPET/apps")
#########
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
final_listings <- read_csv("./data/listing_processed.csv") %>%
select(-all_of(var_remove))
var_list <- final_listings %>% select(-input$Itarget_var) %>% names()
var_list <- final_listings %>% select(-price) %>% names()
paste(var_list, collapse= "+")
paste(var_list, collapse= "+")
as.formula(paste(price,'~',
paste(var_list, collapse= "+")))
as.formula(paste("price",'~',
paste(var_list, collapse= "+")))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(final_listings)
final_listings
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ncol
runApp()
runApp()
install.packages("blogdown")
shiny::runApp('apps')
runApp('apps')
runApp('apps')
library(shiny); runApp('E:/suyiinang/apps/app - asy.R')
shiny::runApp('apps')
runApp('E:/suyiinang/visual_inclass_ex/codes/In-class_Ex12/in-class_ex12-submitbutton.R')
shiny::runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp()
runApp()
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
shiny::runApp('apps')
setwd("E:/suyiinang/ourshinyPET/apps")
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
#########
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
final_listings <- read_csv("./data/listing_processed.csv") %>%
select(-all_of(var_remove)) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(across(where(is.logical), as.factor)) %>%
mutate(price_per_pax = price/accommodates)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(final_listings)
runApp()
listing_summary <- final_listings %>%
group_by(neighbourhood_cleansed) %>%
summarise(avg_price_pp = round(mean(price_per_pax),0),
min_price_pp = round(min(price_per_pax),0),
max_price_pp = round(max(price_per_pax),0),
avg_review_score = round(mean(review_scores_rating),0)) %>%
mutate_at(.vars = vars(neighbourhood_cleansed), .funs= funs(toupper))
listing_summary <- final_listings %>%
group_by(neighbourhood_cleansed) %>%
summarise(avg_price_pp = round(mean(price_per_pax),0),
min_price_pp = round(min(price_per_pax),0),
max_price_pp = round(max(price_per_pax),0),
avg_review_score = round(mean(review_scores_rating),0)) %>%
mutate_at(.vars = vars(neighbourhood_cleansed), .funs= funs(toupper))
listing_summary <- final_listings %>%
group_by(neighbourhood_cleansed) %>%
summarise(avg_price_pp = round(mean(price_per_pax),0),
min_price_pp = round(min(price_per_pax),0),
max_price_pp = round(max(price_per_pax),0),
avg_review_score = round(mean(review_scores_rating),0)) %>%
mutate_at(.vars = vars(neighbourhood_cleansed), .funs= funs(toupper))
#########
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
final_listings <- read_csv("./data/listing_processed.csv") %>%
select(-all_of(var_remove)) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(across(where(is.logical), as.factor)) %>%
mutate(price_per_pax = price/accommodates)
subzone <- readOGR(dsn = "data/spatial", layer="MP14_SUBZONE_WEB_PL")
airbnb <- select(final_listings, host_is_superhost, review_scores_rating,
neighbourhood_cleansed, room_type, price_per_pax, latitude, longitude)
airbnb <- subset(airbnb, !is.na(host_is_superhost))
airbnb_sf <- st_as_sf(airbnb, coords = c("longitude", "latitude"), crs = 4326)
mpsz2 <- st_read(dsn = 'data/spatial',
layer = 'MP14_SUBZONE_WEB_PL',
quiet = TRUE) %>%
group_by(PLN_AREA_N) %>%
summarise(geometry = sf::st_union(geometry))
listing_summary <- final_listings %>%
group_by(neighbourhood_cleansed) %>%
summarise(avg_price_pp = round(mean(price_per_pax),0),
min_price_pp = round(min(price_per_pax),0),
max_price_pp = round(max(price_per_pax),0),
avg_review_score = round(mean(review_scores_rating),0)) %>%
mutate_at(.vars = vars(neighbourhood_cleansed), .funs= funs(toupper))
airbnb_map <- right_join(mpsz2,listing_summary, c("PLN_AREA_N" = 'neighbourhood_cleansed'))
runApp()
runApp()
runApp()
runApp()
