mutate(n=ifelse(sentiment=="negative",-n,n)) %>%
mutate(word=reorder(word,n))%>%
arrange(desc(n))
#%>%
#ggplot(aes(word,n,fill=sentiment))+
#geom_col()+
#coord_flip()
bing_count
nrc <- get_sentiments("nrc")
nrc_sentiments <- data_comments %>%
inner_join(nrc) %>%
count(word,sentiment,sort=TRUE) %>%
acast(word~sentiment,value.var="n",fill=0)
#%>%
#comparison.cloud()
nrc_count <- data_comments %>%
inner_join(nrc) %>%
count(word,sentiment,sort=TRUE) %>%
filter(n>1500) %>%
mutate(n=ifelse(sentiment=="negative",-n,n))%>%
mutate(word=reorder(word,n)) %>%
arrange(desc(n))
#%>%
#ggplot(aes(word,n))+
#facet_grid(~sentiment)+
#geom_col()+
#coord_flip()
nrc_count
region_data <-data_comments %>%
group_by(neighbourhood_group_cleansed) %>%
inner_join(afinn) %>%
count(word,value) %>%
mutate(score=value*n) %>%
group_by(neighbourhood_group_cleansed) %>%
summarise(mean_score=mean(score))
airbnb_clean_region <- right_join(mpsz2,region_data, c("PLN_AREA_N" = "neighbourhood_group_cleansed" ))
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
final_listings <- read_csv("data/listing_processed.csv") %>%
select(-all_of(var_remove)) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(across(where(is.logical), as.factor)) %>%
mutate(price_per_pax = price/accommodates) %>%
drop_na(host_is_superhost)
cat_var <-final_listings %>% select(where(is.factor))
num_var <- final_listings %>% select(where(is.numeric))
facet_var <- final_listings %>% select(host_response_time, host_is_superhost, host_identity_verified, neighbourhood_group_cleansed,
room_type,instant_bookable,bathroom_type)
themes <- list('Gray' = theme_gray(),
'Black & white' = theme_bw(),
'Linedraw' = theme_linedraw(),
'Light' = theme_light(),
'Dark' = theme_dark(),
'Minimal' = theme_minimal(),
'Classic' = theme_classic(),
'Void' = theme_void(),
'Test' = theme_test())
reviews <- read_csv("data/reviews.csv")%>%
dplyr::select(listing_id,comments)
listings <- read_csv("data/listings.csv")  %>%
rename(listing_id=id) %>%
dplyr::select(-c(listing_url, scrape_id, last_scraped, name, picture_url,host_url, host_about,host_thumbnail_url, host_picture_url, host_listings_count, host_verifications,calendar_updated,first_review,last_review,license,neighborhood_overview,description,host_total_listings_count,host_has_profile_pic,availability_30,availability_60,availability_90,availability_365,calculated_host_listings_count,calculated_host_listings_count_entire_homes,calculated_host_listings_count_private_rooms,calculated_host_listings_count_shared_rooms,reviews_per_month,minimum_nights,maximum_nights,minimum_minimum_nights,maximum_minimum_nights,minimum_maximum_nights,maximum_maximum_nights,number_of_reviews_ltm,number_of_reviews_l30d,minimum_nights_avg_ntm,maximum_nights_avg_ntm,calendar_last_scraped,has_availability,instant_bookable))
data <- right_join(reviews,listings,by="listing_id")
data$comments <- gsub("^[alpha:][:space:]'\"]", " ",data$comments) %>%
tolower()
data$comments <- gsub("[^a-zA-Z]", " ",data$comments)
data$comments <- iconv(data$comments,to="UTF-8")
data$price <- str_remove(string=data$price,pattern='\\$') %>%
as.numeric()
data$host_response_rate <- gsub("%","",data$host_response_rate)
data$amenities <- gsub('\"', "", data$amenities, fixed = TRUE)
data <- subset(data,host_location=="Singapore" | host_location=="Singapore, Singapore" | host_location=="SG")
new_stopwords <- c("NA","michelle's","elizabeth","yuan","felix","anita","susan","eddie","eddie's","edwin","belinda","besan","nargis","antonio","sharm","tim","kathleen","stteven","jerome","freddy","eunice","eunice's","vivian","jerome's","mi's","freddy's","joey","tay","michelle","noor","anthony","tay's","carrie","jauhara","susan","karen","jenny","lena","leonard","kingsley","freda","jialin","matthew","fran","na","joey")
all_stopwords <- c(new_stopwords,stop_words)
data_comments <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_cleansed,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments) %>%
group_by(listing_id) %>%
ungroup() %>%
anti_join(stop_words)
data_count <- data_comments %>%
group_by(word) %>%
summarise(frequency=n()) %>%
arrange(desc(frequency))
bigram_data_count <- data %>%
dplyr::select(listing_id,comments,review_scores_rating,neighbourhood_cleansed,neighbourhood_group_cleansed)%>%
unnest_tokens(word,comments,token="ngrams",n=2) %>%
separate(word,c("word1","word2"),sep=" ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
#ungroup() %>%
count(word,sort=TRUE) %>%
dplyr::slice(-c(1))
afinn <- get_sentiments("afinn")
afinn_sentiments <- data_comments %>%
inner_join(afinn) %>%
count(word,value,sort=TRUE) %>%
acast(word~value,value.var="n",fill=0)
#%>%
#comparison.cloud()
afinn_count <- data_comments %>%
#group_by(listing_id) %>%
inner_join(afinn) %>%
count(word,value) %>%
filter(n>500) %>%
#mutate(n=ifelse(sentiment=="negative",-n,n)) %>%
mutate(word=reorder(word,n)) %>%
arrange(desc(n))
#%>%
#ggplot(aes(word,(n)))+
#geom_col()+
#coord_flip()
bing <- get_sentiments("bing")
bing_sentiments <- data_comments %>%
inner_join(bing) %>%
count(word,sentiment,sort=TRUE) %>%
acast(word~sentiment,value.var="n",fill=0)
#%>%
#comparison.cloud(colors = c("#FF5A5F", "#00A699"))
bing_count <- data_comments %>%
inner_join(bing) %>%
count(word,sentiment) %>%
filter(n>500) %>%
mutate(n=ifelse(sentiment=="negative",-n,n)) %>%
mutate(word=reorder(word,n))%>%
arrange(desc(n))
#%>%
#ggplot(aes(word,n,fill=sentiment))+
#geom_col()+
#coord_flip()
bing_count
nrc <- get_sentiments("nrc")
nrc_sentiments <- data_comments %>%
inner_join(nrc) %>%
count(word,sentiment,sort=TRUE) %>%
acast(word~sentiment,value.var="n",fill=0)
#%>%
#comparison.cloud()
nrc_count <- data_comments %>%
inner_join(nrc) %>%
count(word,sentiment,sort=TRUE) %>%
filter(n>1500) %>%
mutate(n=ifelse(sentiment=="negative",-n,n))%>%
mutate(word=reorder(word,n)) %>%
arrange(desc(n))
#%>%
#ggplot(aes(word,n))+
#facet_grid(~sentiment)+
#geom_col()+
#coord_flip()
nrc_count
region_data <-data_comments %>%
group_by(neighbourhood_group_cleansed) %>%
inner_join(afinn) %>%
count(word,value) %>%
mutate(score=value*n) %>%
group_by(neighbourhood_group_cleansed) %>%
summarise(mean_score=mean(score))
subzone <- readOGR(dsn = "data/spatial", layer="MP14_SUBZONE_WEB_PL")
airbnb <- select(final_listings, host_is_superhost, review_scores_rating,
neighbourhood_cleansed, room_type, price_per_pax, latitude, longitude)
airbnb <- subset(airbnb, !is.na(host_is_superhost))
airbnb_sf <- st_as_sf(airbnb, coords = c("longitude", "latitude"), crs = 4326)
mpsz2 <- st_read(dsn = 'data/spatial',
layer = 'MP14_SUBZONE_WEB_PL',
quiet = TRUE) %>%
group_by(PLN_AREA_N) %>%
summarise(geometry = sf::st_union(geometry))
listing_summary <- final_listings %>%
group_by(neighbourhood_cleansed) %>%
summarise(avg_price_pp = round(mean(price_per_pax),0),
min_price_pp = round(min(price_per_pax),0),
max_price_pp = round(max(price_per_pax),0)) %>%
mutate_at(.vars = vars(neighbourhood_cleansed), .funs= funs(toupper))
subregion_data <-data_comments %>%
group_by(neighbourhood_cleansed) %>%
inner_join(afinn) %>%
count(word,value) %>%
mutate(score=value*n) %>%
group_by(neighbourhood_cleansed) %>%
summarise(mean_score=mean(score)) %>%
mutate_at(.vars = vars(neighbourhood_cleansed), .funs= funs(toupper))
listing_summary <- right_join(subregion_data,listing_summary, c("neighbourhood_cleansed" = "neighbourhood_cleansed" ))
airbnb_map <- right_join(mpsz2,listing_summary, c("PLN_AREA_N" = 'neighbourhood_cleansed'))
map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'quantile',
palette = 'Blues')+
tm_borders(lwd = 0.5, alpha = 1)
map
map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_price_pp',
n = 6,
style = 'quantile',
palette = 'Blues')+
tm_borders(lwd = 0.5, alpha = 1)
map
map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('mean_score',
n = 6,
style = 'quantile',
palette = 'Blues')+
tm_borders(lwd = 0.5, alpha = 1)
map
cho_map <- tmap_leaflet(map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
cho_map
map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('mean_score',
n = 6,
style = 'quantile',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
map
cho_map <- tmap_leaflet(map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
cho_map
map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('mean_score',
n = 6,
style = 'pretty',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
map
cho_map <- tmap_leaflet(map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
cho_map
subregion_data <-data_comments %>%
group_by(neighbourhood_cleansed) %>%
inner_join(afinn) %>%
count(word,value) %>%
mutate(score=value*n) %>%
group_by(neighbourhood_cleansed) %>%
summarise(avg_sentiment_score=mean(score)) %>%
mutate_at(.vars = vars(neighbourhood_cleansed), .funs= funs(toupper))
airbnb_map <- right_join(mpsz2,listing_summary, c("PLN_AREA_N" = 'neighbourhood_cleansed'))
listing_summary <- right_join(subregion_data,listing_summary, c("neighbourhood_cleansed" = "neighbourhood_cleansed" ))
airbnb_map <- right_join(mpsz2,listing_summary, c("PLN_AREA_N" = 'neighbourhood_cleansed'))
highchart(type = "map") %>%
hc_add_series_map(data=mpsz2, df=listing_summary(),value = "PLN_AREA_N", joinBy = "avg_sentiment_score") %>%
hc_colorAxis(stops = color_stops()) %>%
hc_tooltip(useHTML=TRUE,headerFormat='',pointFormat = paste0(listing_summary$avg_sentiment_score,'  {point.neighbourhood_cleansed} Sales : {point.avg_sentiment_score} ')) %>%
#hc_title(text = 'Global Sales') %>%
#hc_subtitle(text = paste0('Year: ',input$yearid)) %>%
hc_exporting(enabled = TRUE,filename = 'custom')
map <- tm_shape(mpsz2)+
tm_fill("PLN_AREA_N",title="Region",palette = "Reds")+
tm_borders()+
tm_layout(legend.outside=TRUE, legend.outside.position="right")
highchart(type = "map") %>%
hc_add_series_map(data=mpsz2, df=listing_summary(),value = "PLN_AREA_N", joinBy = "avg_sentiment_score") %>%
hc_colorAxis(stops = color_stops()) %>%
hc_tooltip(useHTML=TRUE,headerFormat='',pointFormat = paste0(listing_summary$avg_sentiment_score,'  {point.neighbourhood_cleansed} Sales : {point.avg_sentiment_score} ')) %>%
#hc_title(text = 'Global Sales') %>%
#hc_subtitle(text = paste0('Year: ',input$yearid)) %>%
hc_exporting(enabled = TRUE,filename = 'custom')
map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('mean_score',
n = 6,
style = 'pretty',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
map
sent_map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
cho_map <- tmap_leaflet(sent_map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
sent_cho_map <- tmap_leaflet(sent_map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
sent_cho_map
id = paste('PLN_AREA_N', "avg_sentiment_score")+
tm_borders(lwd = 0.5, alpha = 1)
map
sent_cho_map <- tmap_leaflet(sent_map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
palette = 'Reds',
sent_map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds',
id = paste('PLN_AREA_N', "avg_sentiment_score"))+
tm_borders(lwd = 0.5, alpha = 1)
sent_cho_map <- tmap_leaflet(sent_map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
sent_cho_map
sent_map <- tm_shape(mpsz2)+
tm_polygons(popup0(
"<b>Neighbourhood: </b>",
airbnb_map$PLN_AREA_N,
"<br>",
airbnb_map$avg_sentiment_score
)) +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
sent_map <- tm_shape(mpsz2)+
tm_polygons(popup = paste0(
"<b>Neighbourhood: </b>",
airbnb_map$PLN_AREA_N,
"<br>",
airbnb_map$avg_sentiment_score
)) +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
sent_map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1)
sent_cho_map <- tmap_leaflet(sent_map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE)) %>%
addPolygons(popup = paste0(
"<b>Neighbourhood: </b>",
airbnb_map$PLN_AREA_N,
"<br>",
airbnb_map$avg_sentiment_score
))
sent_cho_map <- tmap_leaflet(sent_map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE)) %>%
addPolygons(data = airbnb_map,
popup = paste0(
"<b>Neighbourhood: </b>",
airbnb_map$PLN_AREA_N,
"<br>",
airbnb_map$avg_sentiment_score
))
runApp()
runApp()
sent_map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds')+
tm_borders(lwd = 0.5, alpha = 1) +
sent_cho_map <- tmap_leaflet(sent_map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
sent_map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds') +
tm_borders(lwd = 0.5, alpha = 1) +
sent_cho_map <- tmap_leaflet(sent_map) %>%
addTiles() %>%
addProviderTiles('OneMapSG.Original', group = 'Original') %>%
addProviderTiles('OneMapSG.Grey', group = 'Grey') %>%
addProviderTiles('OneMapSG.Night', group = 'Night') %>%
addLayersControl(baseGroups = c('Original', 'Grey', 'Night'),
options = layersControlOptions(collapsed = FALSE))
sent_map <- tm_shape(mpsz2)+
tm_polygons() +
tm_shape(airbnb_map) +
tm_fill('avg_sentiment_score',
n = 6,
style = 'pretty',
palette = 'Reds') +
tm_borders(lwd = 0.5, alpha = 1)
runApp()
runApp()
runApp()
install.packages("shinycssloaders")
install.packages("shinycssloaders")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp()
runApp('E:/suyiinang/ourshinyPET/apps')
datatable(sum_f, filter = 'top', options=list(pageLength = 10,
autoWidth=TRUE))
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
install.packages("shinyhelper")
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
shiny::runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
runApp('E:/suyiinang/ourshinyPET/apps')
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
include_graphics("images/intro.png")
include_graphics("images/observe.png")
include_graphics("images/explore2.png")
include_graphics("images/distribution.png")
include_graphics("images/boxplot.png")
include_graphics("images/mosaic.png")
include_graphics("images/scatter.png")
include_graphics("images/explore1.png")
include_graphics("images/map.png")
include_graphics("images/map1.png")
include_graphics("images/background.png")
include_graphics("images/choro.png")
