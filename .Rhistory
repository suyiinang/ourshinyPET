runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp()
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
install.packages("shinyalert")
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp()
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp()
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
Rfinal_metric_lm <- reactiveVal(NULL)
Rfinal_metric_lm
if (Rfinal_metric_lm){TRUE, FALSE}
ifelse(Rfinal_metric_lm,TRUE, FALSE)
ifelse(Rfinal_metric_lm(),TRUE, FALSE)
observe({ifelse(Rfinal_metric_lm(),TRUE, FALSE)})
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
#########
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
final_listings <- read_csv("./data/listing_processed.csv") %>%
select(-all_of(var_remove)) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(across(where(is.logical), as.factor)) %>%
slice_head(prop = 0.3) ############### REMOVE BEFORE DEPLOY ########################
setwd("C:/kgalbindo/ourshinyPET/apps")
final_listings <- read_csv("./data/listing_processed.csv") %>%
select(-all_of(var_remove)) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(across(where(is.logical), as.factor)) %>%
slice_head(prop = 0.3) ############### REMOVE BEFORE DEPLOY ########################
final_listings <- read_csv("./data/listing_processed.csv") %>%
select(-all_of(var_remove)) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(across(where(is.logical), as.factor)) %>%
slice_head(prop = 0.2) ############### REMOVE BEFORE DEPLOY ########################
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("rsconnect")
runApp()
rsconnect::setAccountInfo(name='kgalbindo', token='0150AAC61593116C7760023BF1B91610', secret='wjTFi+u4m92XHzlSrUCJeDxXOkVt23lO2ybxqcGS')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('C:/kgalbindo/ourshinyPET/apps/R/model_eval.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::deployApp('./apps')
library(rsconnect)
rsconnect::deployApp('./apps')
shiny::runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
library(rsconnect)
rsconnect::deployApp('./apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
Rvar_list(var_list)
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
shiny::runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
rlang::last_error()
runApp('apps')
setwd("C:/kgalbindo/ourshinyPET/apps")
runApp()
rlang::last_error()
runApp()
?select
runApp()
?var_remove
?all_of
runApp()
shiny::runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
setwd("C:/kgalbindo/ourshinyPET/apps")
runApp()
runApp()
runApp()
shiny::runApp('apps')
runApp('apps')
runApp('apps')
iny)
library(shinydashboard)
library(shinyWidgets)
library(tidyverse)
library(ggstatsplot)
library(plotly)
library(readr)
library(leaflet)
library(haven)
library(funModeling)
library(crosstalk)
library(data.table)
library(ggplot2)
library(tidytext)
library(ggfittext)
library(tidymodels)
library(ggcorrplot)
library(vip)
library(Boruta)
library(reshape2)
library(shinycssloaders)
library(ranger)
#########
print("hello")
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
final_listings <- read_csv("./data/listing_processed.csv") %>%
select(-all_of(var_remove)) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(across(where(is.logical), as.factor)) %>%
mutate(price_per_pax = price/accommodates) %>%
drop_na(host_is_superhost)
setwd("C:/kgalbindo/ourshinyPET/apps")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('apps')
var_remove <- c("minimum_minimum_nights", "maximum_minimum_nights",
"minimum_maximum_nights", "maximum_maximum_nights",
"minimum_nights_avg_ntm", "maximum_nights_avg_ntm")
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
runApp('apps')
